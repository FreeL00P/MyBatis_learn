<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fj.mybatis.mapper.DynamicSQLMapper">


    <sql id="empColumns">eid,emp_name,age,sex,email</sql>

    <select id="getEmpByCondition" resultType="com.fj.mybatis.pojo.Emp">
        select * from t_emp
        <where >
            <if test="empName !=null and empName !='' ">
                emp_name=#{empName}
            </if>
            <if test="age !=null and age !='' ">
                and age=#{age}
            </if>
            <if test="sex !=null and sex !='' ">
                or sex=#{sex}
            </if>
            <if test="email !=null and email !='' ">
                and email=#{email}
            </if>
        </where>
    </select>
    <!--
    - trim用于去掉或添加标签中的内容
- 常用属性
 - prefix：在trim标签中的内容的前面添加某些内容
   - suffix：在trim标签中的内容的后面添加某些内容
   - prefixOverrides：在trim标签中的内容的前面去掉某些内容
   - suffixOverrides：在trim标签中的内容的后面去掉某些内容
   若trim中的标签都不满足条件，则trim标签没有任何效果，也就是只剩下`select * from t_emp`
    -->
    <select id="getEmpByConditionTwo" resultType="com.fj.mybatis.pojo.Emp">
        select <include refid="empColumns"/> from t_emp
        <trim prefix="where" suffixOverrides="and|or">
            <if test="empName !=null and empName !='' ">
                emp_name=#{empName} and
            </if>
            <if test="age !=null and age !='' ">
                age=#{age} and
            </if>
            <if test="sex !=null and sex !='' ">
                sex=#{sex}  or
            </if>
            <if test="email !=null and email !='' ">
                email=#{email} and
            </if>
        </trim>
    </select>
    <!--List<Emp> getEmpByChoose(Emp emp);-->
    <select id="getEmpByChoose" resultType="com.fj.mybatis.pojo.Emp">
        select * from t_emp
        <where>
            <choose>
                <when test="empName !=null and empName !='' ">
                    emp_name=#{empName}
                </when>
                <when test="age !=null and age !=''">
                    age=#{age}
                </when>
                <when test="sex !=null and sex !='' ">
                    sex=#{sex}
                </when>
                <when test="email !=null and email !='' ">
                    email=#{email}
                </when>
            </choose>
        </where>
    </select>
    <!--int deleteMoreByArray(Integer[] eids);
    - 属性：
    - collection：设置要循环的数组或集合
    - item：表示集合或数组中的每一个数据
    - separator：设置循环体之间的分隔符，分隔符前后默认有一个空格，如` , `
    - open：设置foreach标签中的内容的开始符
    - close：设置foreach标签中的内容的结束符
    -->
    <delete id="deleteMoreByArray">
<!--        delete from t_emp  where eid in-->
<!--        <foreach collection="eids" item="eid" separator="," open="(" close=")">-->
<!--            #{eid}-->
<!--        </foreach>-->
        delete from t_emp
        <where>
            <foreach collection="eids" item="eid" separator="or">
                #{eid}
            </foreach>
        </where>
    </delete>

    <!--    int insertMoreByList(@Param("emps") List<Emp> emps);-->
    <insert id="insertMoreByList">
        insert into t_emp values
        <foreach collection="emps" item="emp" separator=",">
            (null,#{emp.empName},#{emp.age},#{emp.sex},#{emp.email},null)
        </foreach>
    </insert>

</mapper>